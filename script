--// Aimlock + ESP with Clean Original UI + Random Body Parts
-- Put this in StarterPlayerScripts as a LocalScript

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer
local cam = Workspace.CurrentCamera

-- Settings
local SETTINGS = {
	CircleRadius = 100,
	Smoothness = 0.2,
	IgnoreTeammates = true,
}

local AimlockEnabled = true
local ESPEnabled = true
local SettingsOpen = false
local currentTarget = nil
local TargetPart = nil

--// Clean UI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false

-- Circle in middle
local circleFrame = Instance.new("Frame")
circleFrame.AnchorPoint = Vector2.new(0.5,0.5)
circleFrame.Position = UDim2.fromScale(0.5,0.5)
circleFrame.Size = UDim2.fromOffset(SETTINGS.CircleRadius*2, SETTINGS.CircleRadius*2)
circleFrame.BackgroundTransparency = 1
circleFrame.Visible = AimlockEnabled
circleFrame.Parent = ScreenGui

local circleStroke = Instance.new("UIStroke")
circleStroke.Thickness = 2
circleStroke.Color = Color3.fromRGB(255,0,0)
circleStroke.Parent = circleFrame

-- Settings panel
local panel = Instance.new("Frame")
panel.Size = UDim2.fromOffset(200, 160)
panel.Position = UDim2.new(0, 20, 0, 60)
panel.BackgroundColor3 = Color3.fromRGB(30,30,30)
panel.Visible = false
panel.Parent = ScreenGui
Instance.new("UICorner", panel).CornerRadius = UDim.new(0,10)

-- Open/close button
local openButton = Instance.new("TextButton")
openButton.Size = UDim2.fromOffset(80, 30)
openButton.Position = UDim2.new(0, 20, 0, 20)
openButton.Text = "Settings"
openButton.BackgroundColor3 = Color3.fromRGB(40,40,40)
openButton.TextColor3 = Color3.new(1,1,1)
openButton.Parent = ScreenGui

-- Toggles
local circleToggle = Instance.new("TextButton")
circleToggle.Size = UDim2.fromOffset(180, 25)
circleToggle.Position = UDim2.fromOffset(10, 10)
circleToggle.Text = "Circle: ON"
circleToggle.BackgroundColor3 = Color3.fromRGB(50,50,50)
circleToggle.TextColor3 = Color3.new(1,1,1)
circleToggle.Parent = panel

local espToggle = Instance.new("TextButton")
espToggle.Size = UDim2.fromOffset(180, 25)
espToggle.Position = UDim2.fromOffset(10, 40)
espToggle.Text = "ESP: ON"
espToggle.BackgroundColor3 = Color3.fromRGB(50,50,50)
espToggle.TextColor3 = Color3.new(1,1,1)
espToggle.Parent = panel

local teamToggle = Instance.new("TextButton")
teamToggle.Size = UDim2.fromOffset(180, 25)
teamToggle.Position = UDim2.fromOffset(10, 70)
teamToggle.Text = "Ignore Teammates: ON"
teamToggle.BackgroundColor3 = Color3.fromRGB(50,50,50)
teamToggle.TextColor3 = Color3.new(1,1,1)
teamToggle.Parent = panel

-- Sliders (circle + smoothness)
local circleSlider = Instance.new("TextButton")
circleSlider.Size = UDim2.fromOffset(180, 20)
circleSlider.Position = UDim2.fromOffset(10, 100)
circleSlider.Text = "Circle Size"
circleSlider.BackgroundColor3 = Color3.fromRGB(60,60,60)
circleSlider.TextColor3 = Color3.new(1,1,1)
circleSlider.Parent = panel

local smoothSlider = Instance.new("TextButton")
smoothSlider.Size = UDim2.fromOffset(180, 20)
smoothSlider.Position = UDim2.fromOffset(10, 130)
smoothSlider.Text = "Smoothness"
smoothSlider.BackgroundColor3 = Color3.fromRGB(60,60,60)
smoothSlider.TextColor3 = Color3.new(1,1,1)
smoothSlider.Parent = panel

--// Toggle logic
openButton.MouseButton1Click:Connect(function()
	SettingsOpen = not SettingsOpen
	panel.Visible = SettingsOpen
end)

circleToggle.MouseButton1Click:Connect(function()
	AimlockEnabled = not AimlockEnabled
	circleToggle.Text = "Circle: "..(AimlockEnabled and "ON" or "OFF")
	circleFrame.Visible = AimlockEnabled
end)

espToggle.MouseButton1Click:Connect(function()
	ESPEnabled = not ESPEnabled
	espToggle.Text = "ESP: "..(ESPEnabled and "ON" or "OFF")
end)

teamToggle.MouseButton1Click:Connect(function()
	SETTINGS.IgnoreTeammates = not SETTINGS.IgnoreTeammates
	teamToggle.Text = "Ignore Teammates: "..(SETTINGS.IgnoreTeammates and "ON" or "OFF")
end)

-- Slider dragging
local draggingCircle, draggingSmooth = false, false
circleSlider.MouseButton1Down:Connect(function() draggingCircle = true end)
smoothSlider.MouseButton1Down:Connect(function() draggingSmooth = true end)

UserInputService.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		draggingCircle, draggingSmooth = false, false
	end
end)

RunService.RenderStepped:Connect(function()
	if draggingCircle then
		local pos = math.clamp((UserInputService:GetMouseLocation().X - circleSlider.AbsolutePosition.X) / circleSlider.AbsoluteSize.X, 0, 1)
		SETTINGS.CircleRadius = math.floor(pos*300)
		circleFrame.Size = UDim2.fromOffset(SETTINGS.CircleRadius*2, SETTINGS.CircleRadius*2)
	end
	if draggingSmooth then
		local pos = math.clamp((UserInputService:GetMouseLocation().X - smoothSlider.AbsolutePosition.X) / smoothSlider.AbsoluteSize.X, 0, 1)
		SETTINGS.Smoothness = math.max(0.05, pos)
	end
end)

--// ESP
local function getESP(player)
	local char = player.Character
	if not char then return end
	local hrp = char:FindFirstChild("HumanoidRootPart")
	if not hrp then return end

	local esp = hrp:FindFirstChild("AimlockESP")
	if not esp then
		esp = Instance.new("BillboardGui")
		esp.Name = "AimlockESP"
		esp.AlwaysOnTop = true
		esp.Adornee = hrp
		esp.Size = UDim2.new(4,0,6,0)
		esp.Parent = hrp

		local box = Instance.new("Frame")
		box.Size = UDim2.fromScale(1,1)
		box.BackgroundColor3 = Color3.fromRGB(0,255,0)
		box.BackgroundTransparency = 0.6
		box.BorderSizePixel = 0
		box.Parent = esp
	end
	esp.Enabled = ESPEnabled
end

--// Random Target Parts
local function getTargetParts(char)
	local parts = {}
	for _, partName in ipairs({
		"Head","UpperTorso","Torso","HumanoidRootPart",
		"Left Arm","Right Arm","Left Leg","Right Leg",
		"LeftUpperArm","RightUpperArm","LeftUpperLeg","RightUpperLeg"
	}) do
		local p = char:FindFirstChild(partName)
		if p then table.insert(parts, p) end
	end
	return parts
end

--// Target finder
local params = RaycastParams.new()
params.FilterType = Enum.RaycastFilterType.Blacklist
params.FilterDescendantsInstances = {LocalPlayer.Character}

local function findTarget()
	local bestTarget
	for _,plr in ipairs(Players:GetPlayers()) do
		if plr ~= LocalPlayer then
			if SETTINGS.IgnoreTeammates and plr.Team == LocalPlayer.Team then
				continue
			end
			local char = plr.Character
			local hrp = char and char:FindFirstChild("HumanoidRootPart")
			local hum = char and char:FindFirstChildOfClass("Humanoid")
			if hrp and hum and hum.Health > 0 then
				local pos, onScreen = cam:WorldToViewportPoint(hrp.Position)
				if onScreen then
					local dist = (Vector2.new(pos.X,pos.Y) - Vector2.new(cam.ViewportSize.X/2, cam.ViewportSize.Y/2)).Magnitude
					if dist <= SETTINGS.CircleRadius then
						local ray = Workspace:Raycast(cam.CFrame.Position,(hrp.Position-cam.CFrame.Position).Unit*500,params)
						if ray and ray.Instance and ray.Instance:IsDescendantOf(char) then
							bestTarget = plr
						end
					end
				end
			end
			if ESPEnabled then getESP(plr) end
		end
	end

	if bestTarget then
		if currentTarget ~= bestTarget then
			currentTarget = bestTarget
			local parts = getTargetParts(currentTarget.Character)
			TargetPart = (#parts > 0) and parts[math.random(1,#parts)] or nil
		end
	else
		currentTarget, TargetPart = nil, nil
	end
	return currentTarget, TargetPart
end

--// Aim update
RunService.RenderStepped:Connect(function()
	if AimlockEnabled then
		local target, part = findTarget()
		if target and part then
			local targetPos = part.Position
			local lookVector = (targetPos - cam.CFrame.Position).Unit
			local newCF = CFrame.new(cam.CFrame.Position, cam.CFrame.Position + lookVector)
			cam.CFrame = cam.CFrame:Lerp(newCF, SETTINGS.Smoothness)
		end
	end
end)
